<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="updateTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAfwAAAP+AAAH/4AAH//AAD//+AH/w==
</value>
  </data>
</root>